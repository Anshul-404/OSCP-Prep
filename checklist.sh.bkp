 #!/bin/bash

RED="31"
BOLDRED="\e[1;${RED}m"
GREEN="32"
BOLDGREEN="\e[1;${GREEN}m"
CYAN="\e[36m"
WHITE="\e[97m"
ORANGE="\e[33m"
ENDCOLOR="\e[0m"


echo  "${BOLDRED}"
figlet CHECKLIST
echo "	${BOLDGREEN}DON'T TRY HARDER, TRY AGAIN !!"
echo "  	            -JOHN HAMMOND"
echo
echo "${CYAN}List Of Things To Keep In Mind While Attempting A CTF -- "
echo "${ENDCOLOR}"
echo "${ORANGE}1. DON'T Leave Any Place for ENUMERATION 
2. Use NMAP Scripts [vuln,smb]
3. GTFOBINS
4. Check Every Possible Folder After Initial Access
  4.1. [var/www/] [tmp/] [etc/] [home/] [opt/] [home/.ssh/]
5. Look For .txts, .py, .sh, .rb, .conf
6. GOBUSTER Every Newly Found Directory
7. Crontabs, sudo -l, ls -la, id, ps, ps aux, history
8. Google CMS Versions, Exploits, CMS Versions + Exploits + Reverse Shell
9. Find Special Perms (SUID, SGID)
10. If Nothing Interesting is Found, GOBUSTER Again with Extensions
11. If CTF is Based on Character/Movie/Game, Look for Dictionaries and Bruteforce. Google Information About Character/Movie/Game
12. Enumerate Samba Shares
13. If Admin Password Found For Web Application, Look For LFI, RFI, RCE, Other User Credentials. Then Try Putting PHP Reverse Shell in Templates, Themes, Other Website PHPs.
   13.1. Try LFI Bypass Only A Few Times (Including Magic Bytes and URL Encoding). Then Move To Other Methods.
14. Read Carefully and Try
15. Scan All PORTS In the Background
16. If A Library Import has NO Correct and Full Path mentioned, You can Make your Own file With Same Library Name in current Directory or in /tmp/ Directory with Malicious Code and Change the PATH Variable to Include /tmp/ Directory. So, Linux Starts Looking For The Library or File From /tmp/ Folder. [For python, make Name.py library (like import random --> random.py. For bash, if date then --> date. Don't forget To chmod +x on The Created File.)]
17. For Fields that Take Input And Process Them, Try Command Injection with Burp."
